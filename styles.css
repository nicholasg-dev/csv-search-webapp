/**
 * CSV Search Webapp - Styles
 *
 * This stylesheet contains custom styles for the CSV Search Webapp.
 * It extends Bootstrap's default styling with custom design elements
 * and provides specific styling for the DataTables components.
 *
 * @author Nicholas G
 * @version 1.0.0
 */

/* ======================================
   General Layout and Container Styles
   ====================================== */

body {
    background-color: #f8f9fa;  /* Light gray background */
    display: flex;              /* Use flexbox for layout */
    flex-direction: column;     /* Stack children vertically */
    min-height: 100vh;          /* Full viewport height */
}

.container {
    max-width: 1400px;          /* Wider container for data tables */
}

/* ======================================
   Card Component Styles
   ====================================== */

.card {
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);  /* Subtle shadow for depth */
    border: none;                               /* Remove default border */
    border-radius: 8px;                         /* Rounded corners */
    overflow: hidden;                           /* Ensure content stays within rounded corners */
}

.card-header {
    background-color: #f1f5f9;                  /* Light blue-gray header */
    border-bottom: 1px solid rgba(0, 0, 0, 0.05); /* Subtle border */
    padding: 1rem 1.25rem;                      /* Increased padding for better spacing */
}

/* ======================================
   Navigation Bar Styles
   ====================================== */

.navbar {
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);  /* Subtle shadow for depth */
}

.navbar-brand {
    font-weight: 600;                           /* Semi-bold brand text */
}

/* ======================================
   DataTable Core Styles
   ====================================== */

#csvDataTable {
    width: 100% !important;                    /* Ensure table takes full width */
    border-collapse: separate;                 /* Better border handling */
    border-spacing: 0;                         /* No space between cells */
}

#csvDataTable thead th {
    background-color: #f8f9fa;                 /* Light gray header background */
    font-weight: 600;                          /* Semi-bold header text */
    border-bottom: 2px solid #dee2e6;          /* Distinct bottom border */
}

#csvDataTable tbody tr:hover {
    background-color: rgba(0, 123, 255, 0.05);  /* Subtle blue highlight on hover */
}

/* ======================================
   DataTable Component Styles
   ====================================== */

/* Search filter positioning */
.dataTables_wrapper .dataTables_filter {
    float: right;                              /* Align to right */
    margin-bottom: 10px;                       /* Space below */
}

/* Length menu positioning */
.dataTables_wrapper .dataTables_length {
    float: left;                               /* Align to left */
    margin-bottom: 10px;                       /* Space below */
}

/* Info text styling */
.dataTables_wrapper .dataTables_info {
    clear: both;                               /* Clear floats */
    padding-top: 10px;                         /* Space above */
    color: #6c757d;                            /* Muted text color */
}

/* Pagination controls positioning */
.dataTables_wrapper .dataTables_paginate {
    float: right;                              /* Align to right */
    padding-top: 10px;                         /* Space above */
}

/* Individual page buttons */
.dataTables_wrapper .dataTables_paginate .paginate_button {
    border-radius: 4px;                        /* Rounded corners */
    margin: 0 2px;                             /* Space between buttons */
}

/* Current/active page button */
.dataTables_wrapper .dataTables_paginate .paginate_button.current {
    background: #0d6efd !important;            /* Bootstrap primary blue */
    border-color: #0d6efd !important;          /* Matching border */
    color: white !important;                   /* White text */
}

/* Hover state for page buttons */
.dataTables_wrapper .dataTables_paginate .paginate_button:hover {
    background: #e9ecef !important;            /* Light gray background */
    border-color: #dee2e6 !important;          /* Subtle border */
    color: #212529 !important;                 /* Dark text */
}

/* ======================================
   Alert and Notification Styles
   ====================================== */

.alert-info {
    background-color: #cfe2ff;                 /* Light blue background */
    border-color: #b6d4fe;                     /* Blue border */
    color: #084298;                            /* Dark blue text */
}

/* ======================================
   Footer Styles
   ====================================== */

footer {
    margin-top: auto;                          /* Push to bottom with flexbox */
    border-top: 1px solid #dee2e6;             /* Subtle top border */
}

/* ======================================
   Responsive Design Adjustments
   ====================================== */

@media (max-width: 768px) {
    /* Center DataTables components on small screens */
    .dataTables_wrapper .dataTables_length,
    .dataTables_wrapper .dataTables_filter,
    .dataTables_wrapper .dataTables_info,
    .dataTables_wrapper .dataTables_paginate {
        float: none;                           /* Remove float */
        text-align: center;                    /* Center text */
    }

    /* Stack card header elements vertically */
    .card-header {
        flex-direction: column;                /* Stack vertically */
    }

    /* Full-width flex containers in card headers */
    .card-header .d-flex {
        margin-top: 10px;                      /* Space above */
        width: 100%;                           /* Full width */
    }
}

/* ======================================
   Security - Honeypot Implementation
   ====================================== */

/**
 * Honeypot Field Styling
 *
 * This CSS hides form fields from human users while keeping them accessible to bots.
 * The key concept is that these fields are invisible and inaccessible to humans,
 * but most bots will still see and fill them because they parse the HTML directly.
 *
 * When a bot fills these fields, our JavaScript detects this and blocks the submission.
 *
 * Implementation notes:
 * - We use multiple techniques to hide the field (opacity, position, size, etc.)
 * - This redundancy ensures the field stays hidden across different browsers
 * - We use pointer-events: none to prevent any mouse interaction
 * - The field remains in the DOM and is accessible to screen readers and bots
 */
.honeypot-field {
    opacity: 0;                               /* Make it invisible to humans */
    position: absolute;                        /* Take it out of the normal document flow */
    top: 0;                                    /* Position it at the top */
    left: -9999px;                             /* Move it far off-screen to the left */
    height: 0;                                 /* No height so it doesn't take up space */
    width: 0;                                  /* No width so it doesn't take up space */
    z-index: -1;                               /* Place it behind all other elements */
    pointer-events: none;                      /* Disable all mouse/touch interactions */
    user-select: none;                         /* Prevent text selection */
    tab-index: -1;                             /* Remove from tab order */
}

.filter-panel {
    background: #fff;
    padding: 1rem;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    margin-bottom: 1rem;
}

.filter-group {
    display: flex;
    gap: 1rem;
    align-items: center;
    margin-bottom: 0.5rem;
}

.filter-operator {
    width: 100px;
}
